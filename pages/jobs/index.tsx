import { useRouter } from "next/router";
import Head from "next/head";
import Layout from "../../components/layout";
import Card from "../../components/card";
import { Job } from "../../interfaces/Jobs";
import Aside from "../../components/aside";
import FilterNav from "../../components/filterNav";

import {
  BackwardIcon,
  ChevronLeftIcon,
  ChevronRightIcon,
  ForwardIcon,
} from "@heroicons/react/24/solid";
import { ParsedUrlQuery } from "querystring";

interface Props {
  jobs: Job[];
  page: number;
}

interface Params extends ParsedUrlQuery {
  page: string;
}

export default function Jobs({ jobs, page }: Props) {
  // const [pageNumber, setPageNumber] = useState(1);
  const router = useRouter();

  const handlePrevPage = () => {
    if (page > 1) {
      router.push(`/jobs?page=${page - 1}`);
    }
  };

  const handleNextPage = () => {
    router.push(`/jobs?page=${page + 1}`);
  };

  return (
    <Layout>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="wrapper w-full flex flex-col flex-grow scroll-smooth py-8 px-10 overflow-auto max-sm:p-5">
        <FilterNav />
        <div className="main-container flex flex-grow pt-8">
          <Aside />

          <div className="searched-jobs flex flex-col flex-grow pl-10 max-xs:pl-0">
            <div className="searched-bar flex items-center justify-between animate-slideY max-md:flex-col max-md:items-start">
              <div className="searched-show text-[19px] font-semibold">
                <p> Showing {jobs.length} Jobs </p>
              </div>
              <div className="searched-sort max-md:mt-[5px]">
                Sort by: <span className="post-time">Newest Post </span>
                <span className="menu-icon">â–¼</span>
              </div>
            </div>
            <div className="job-cards pt-5 grid max-2xl:grid-cols-1 max-xd:grid-cols-1 max-3xl:grid-cols-2  max-xs:grid-cols-2 grid-cols-3 gap-6 animate-slideY ">
              {jobs.map((job) => (
                <Card job={job} />
              ))}
            </div>
            <div className="pagination flex items-center mt-4">
              <div className="ml-auto flex items-center gap-2 px-8  text-xs">
                <button type="button" disabled={page == 1} className="border-none outline-none">
                  <BackwardIcon className="w-4 h-4" />
                </button>
                <button
                  type="button"
                  disabled={page == 1}
                  onClick={handlePrevPage}
                  className="border-none outline-none"
                >
                  <ChevronLeftIcon className="w-4 h-4" />
                </button>
                <button className="border-none outline-none" type="button">
                  1
                </button>
                <button>2</button>
                <button type="button" onClick={handleNextPage}>
                  <ChevronRightIcon className="w-4 h-4" />
                </button>
                <button>
                  <ForwardIcon className="w-4 h-4" />
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </Layout>
  );
}

export async function getStaticProps({ params }: ParsedUrlQuery) {
  const page = params?.page ? parseInt(params.page) : 1;
  const limit = 10;
  const offset = (page - 1) * limit;

  // const { data } = await axios.get(`/api/items?limit=${limit}&offset=${offset}`)

  const res = await fetch(`http://localhost:3000/api/jobs?limit=${limit}&offset=${offset}`);
  const jobs = await res.json();

  return {
    props: { jobs, page },
  };
}
